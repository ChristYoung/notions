//input verify
//author:jie yang --- 2015.10.06

(function($){
	//过长字符删减
	$.fn.cutlongStr = function(n){
		var str = this.html();
		if(str.length>n){
			this.html(str.substring(0,n)+'...');
			this.attr('title',str);
		}
		return this;      //返回jQuery对象,便于链式调用
    };
	
	//全选功能
	$.fn.checkAll = function(options){
		var me = this;
		var Len = options.length;
		this.click(function(){
			options.prop('checked',$(this).prop('checked'));
		});
		options.click(function(){
			me.prop('checked',options.filter(':checked').length == Len?true:false);
		});
		return this;
	};
	
	//表单提交时删除空格
	$.fn.Trim = function(){
	    var me = this;
    	this.blur(function(){
           Replace();
    	});
    	this.parents('form').submit(function(){
    	   Replace();
    	});
    	var Replace = function(){
    	   var V = me.val();
    	   if(V != ''){
    	   	 me.val(V.replace(/\s/g,''));
    	   }
    	};
    	return this;
    };
	$('.Trim').each(function(i,e){        //所有的Trim类均主动调用该方法
		$(e).Trim();
	});
	
	//表单验证方法,在jQuery对象下扩展一个validator方法
	$.fn.validator = function(options){
		var me = this;
		var rex = {
			noSpace:/\s/g,
			phoneNum:/^1[3,5,7,8]\d{9}$/,
			contactPhone:/^((\d{11})|^((\d{7,8})|(\d{4}|\d{3})-(\d{7,8})|(\d{4}|\d{3})-(\d{7,8})-(\d{4}|\d{3}|\d{2}|\d{1})|(\d{7,8})-(\d{4}|\d{3}|\d{2}|\d{1}))$)$/,
			eMail:/^\w+@[a-z0-9]+(\.[a-z]+){1,3}$/,
			sPecial:/[`~!@#\$%\^\&\，\。\、\……\·\《\》\￥\=\|\：\“\”\；\‘\’\——\！\【\】\（\）\？\s\*\(\)\+<>\?:"\{\},\.\\\/;'\[\]]/g,
			Mac:/[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}/,
			fixLine:/^\d{8,}$/,
			onlyNum:/^\d+$/g,
			onlyChin:/^[\u4e00-\u9fa5]+$/,
			noChin:/^[A-Za-z0-9]+$/,
			webAddress:/^(([hH][tT]{2}[pP][sS]?)|([fF][tT][pP]))\:\/\//,
			iD:/^(^[1-9]\d{7}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}$)|(^[1-9]\d{5}[1-9]\d{3}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])((\d{4})|\d{3}[X])$)$/,
			strongpassword:/^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,16}$/
        };
		var defaults = {
			errContainer:me.siblings('.error'),
			errorTips:'',
			blurCheck:false,
			objEqual:null,
			forbiddenEqual:false,
			required:false,
			requiredMsg:'',
			equalMsg:'',
			equalStr:null,
			equalStrMsg:'',
			minLength:null,
			minMsg:'',
			maxVal:null,
			minVal:null,
			valMsg:'',
			testType:null
		};
		var opts = $.extend({},defaults,options);
		me.init = function(){
			if(!(me.tocheck(opts.testType) && me.required() && me.minlength(opts.minLength) && me.equal(opts.objEqual) && me.equalStr(opts.equalStr) && me.valCheck(opts.minVal,opts.maxVal))){
				me.focus();
				return false;
			}else{
				me.blur();
				return true;
			}
		};
		me.tocheck = function(type){
			if(type){
				if(this.val() != ''){
    				if(type != 'sPecial' && type != 'noSpace'){
    					if(!rex[type].test(this.val())){
        					opts.errContainer.html(opts.errorTips);
        					return false;
        				}
    				}else{
    					if(rex[type].test(this.val())){
        					opts.errContainer.html(opts.errorTips);
        					return false;
        				}
    				};
    			};
			};
			opts.errContainer.html('');
			return true;
		};
		me.required = function(){
			if(opts.required && this.val() == ''){
				opts.errContainer.html(opts.requiredMsg);
				setTimeout(function(){ 
					me.focus();
				}, 0);
				return false;
			}
			opts.errContainer.html('');
			return true;
		};
		me.equal = function(obj){
			if(!opts.forbiddenEqual){
				if(obj && this.val() != obj.val()){
					opts.errContainer.html(opts.equalMsg);
					return false;
				}
			}else{
				if(obj && this.val() == obj.val()){
					opts.errContainer.html(opts.equalMsg);
					return false;
				}
			}	
			opts.errContainer.html('');
    		return true;
		};
		me.equalStr = function(str){
			if(str && this.val() == str){
				opts.errContainer.html(opts.equalStrMsg);
				return false;
			}	
			opts.errContainer.html('');
    		return true;
		};
		me.minlength = function(n){
			if(this.val() != ''){
				if(n && this.val().length<n){
					opts.errContainer.html(opts.minMsg);
					return false;
				}
			}
			opts.errContainer.html('');
			return true;
		};
		me.valCheck = function(v1,v2){
			var v = this.val();
			if(v != ''){
				if(v1 && v2){
					if(v>v2 || v<v1){
						opts.errContainer.html(opts.valMsg);
						return false;
					}
				}
			}
			opts.errContainer.html('');
			return true;
		};
		return me.init();
    };
    
    //回车提交表单
    $.fn.enterSub = function(options){
    	//options参数传入一个按钮对象,当一个form表单的提交是用type=button的click事件来模拟的时候,则传入这个按钮的jQuery对象,并且在回车时主动触发click事件,如果不传这个options参数,则默认是type=submit提交
    	  var opt = null;
    	  var me = this;
    	 if(options){
    	 	  opt = options;
    	 };
    	 me.keydown(function(e){
    	 	  var keyCode = e.which || e.keyCode;
    	 	  if(keyCode == 13){
	    	 	  	if(opt != null){
	    	 	  		opt.trigger('click');
	    	 	  	}else{
	    	 	  		$(this).submit();
	    	 	  	}
			  }
    	 });
    };
})(jQuery);

//私有方法,不选择任何组织,包含下级框隐藏
function hideLowlevel(obj){
	var tagName = obj[0].tagName;
	function ifNone(){
		if(obj.val() != ''){
			$('.lowL').show();
			$('.lowL').siblings('.includeD').show();
		}else{
			$('.lowL').hide();
			$('.lowL').siblings('.includeD').hide();
		}
	};
	if(tagName == 'INPUT'){
		obj.on('input',function(){
			ifNone();
		});
	}else if(tagName == 'SELECT'){
		obj.on('change',function(){
			ifNone();
		});
	};
	ifNone();
};

//私有方法所有的查询页面默认不能输入%,%在后台是模糊查询
function Forbidden(){
	var oForm = $('.Trim').parents('form'),
	    opt = null,
	    aTrim = $('.Trim'),
	    Len = 0;
	oForm.submit(function(){
		Len = $('.Trim').length;
		for(var i=0; i<Len; i++){
			if($(aTrim[i]).val().indexOf('%') != -1){
				opt = {'text':'请输入合法字符串'};
				noty(opt);
				return false;
			}
		}
		return true;
	});
};
Forbidden();
